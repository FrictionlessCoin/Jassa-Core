<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.aksw.jassa</groupId>
		<artifactId>jassa-parent</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>jassa-js</artifactId>
	<name>JAvascript Suite for Sparql Access - JS</name>
	<!-- <packaging>js</packaging> -->
	<description>A JavaScript library for Sparql access</description>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<finalName>jassa</finalName>
		<plugins>
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>1.7.2</version>

				<executions>
					<execution>
						<id>default-minify</id>
						<phase>process-resources</phase>

						<configuration>
						    <charset>UTF-8</charset>
<!-- 							Note: The extra 'webapp' dir in the target is simply there to put target and  -->
<!-- 							src on the same level of nesting, so that relative paths to resouces work  -->
<!-- 							either way -->


<!-- 							<cssSourceDir>resources/css/</cssSourceDir> -->
<!-- 							<cssTargetDir>webapp/resources/css/</cssTargetDir> -->
<!-- 							<cssSourceFiles> -->
<!-- 								<param>style.css</param> -->
<!-- 							</cssSourceFiles> -->
<!-- 							<cssFinalFile>facete.css</cssFinalFile> -->

						    <jsSourceDir>resources/js/</jsSourceDir>
							<jsTargetDir>webapp/resources/js/</jsTargetDir>
							<jsFinalFile>jassa.js</jsFinalFile>							
							<jsSourceFiles>
							    <param>modules.js</param>
							  
<!-- 							    <param>utils/Logging.js</param> -->
							    
							    <param>rdf/rdf-core.js</param>
							    <param>rdf/vocabs/utils.js</param>
							    <param>rdf/vocabs/xsd.js</param>
							    <param>rdf/rdf-literals.js</param>
							    
							    <param>rdf/vocabs/rdf.js</param>
							    <param>rdf/vocabs/rdfs.js</param>
							    <param>rdf/vocabs/owl.js</param>
							    <param>rdf/vocabs/wgs84.js</param>
							    							    							    							    							    							    							    
							    <param>sparql/syntax/jena-sparql-base.js</param>
							    <param>sparql/syntax/jena-sparql-exprs.js</param>
								<param>sparql/syntax/jena-sparql-elements.js</param>
								<param>sparql/syntax/jena-sparql-utils.js</param>
															    
								<param>sparql/SparqlServiceHttp.js</param>
								<param>sparql/SparqlServicePaginator.js</param>

								<param>sparql/sparql-expr-eval.js</param>
								
								
								<param>sponate/core/sponate-collections.js</param>
								<param>sponate/core/sponate-core.js</param>
								<param>sponate/core/sponate-store.js</param>
								<param>sponate/core/sponate-context.js</param>
								<param>sponate/core/sponate-utils.js</param>
								<param>sponate/core/sponate-facade.js</param>
								<param>sponate/core/sponate-critera-core.js</param>
								
								<param>sponate/adapters/sponate-angular.js</param>
							</jsSourceFiles>
							

						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- That's a sledge hammer solution - but at least it works ... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<arguments>-P!source-artifacts</arguments>
					<useReleaseProfile>false</useReleaseProfile>
					<goals>-Dmaven.test.skip=true deploy</goals>
				</configuration>
			</plugin>


			<!--Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.9.v20130131</version>
				<configuration>
					<systemProperties>
						<systemProperty>
							<name>jetty.port</name>
							<value>8080</value>
						</systemProperty>
					</systemProperties>
					<reload>manual</reload>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<skipTests>false</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>
					<packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
					<attachClasses>true</attachClasses>
					<!-- <classesClassifier>classes</classesClassifier> -->
				</configuration>
			</plugin>

		</plugins>
	</build>

</project>
